// Copyright (C) 2017  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.


// Generated by Quartus Prime Version 17.1 (Build Internal Build 593 12/11/2017)
// Created on Wed Oct 20 16:51:14 2021

multipli_parallel multipli_parallel_inst
(
	.CLOCK(CLOCK_sig) ,	// input  CLOCK_sig
	.RESET(RESET_sig) ,	// input  RESET_sig
	.END_MULT(END_MULT_sig) ,	// output  END_MULT_sig
	.A(A_sig) ,	// input [tamano-1:0] A_sig
	.B(B_sig) ,	// input [tamano-1:0] B_sig
	.S(S_sig) ,	// output [2*tamano-1:0] S_sig
	.START(START_sig) 	// input  START_sig
);

defparam multipli_parallel_inst.tamano = 8;
